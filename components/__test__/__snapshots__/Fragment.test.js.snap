// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Fragment /> does not render when the route does not match 1`] = `
initialize {
  "options": Object {
    "decodeEntities": true,
    "normalizeWhitespace": false,
    "withDomLvl1": true,
    "xml": false,
  },
}
`;

exports[`<Fragment /> renders when the route matches 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    value={
      Object {
        "currentLocation": Object {
          "pathname": "/page",
        },
      }
    }
  >
    <Fragment
      forRoute="/page"
    >
      <h1>
        Text
      </h1>
    </Fragment>
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <h1>
        Text
      </h1>,
      "forRoute": "/page",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Text",
      },
      "ref": null,
      "rendered": "Text",
      "type": "h1",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <h1>
          Text
        </h1>,
        "forRoute": "/page",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Text",
        },
        "ref": null,
        "rendered": "Text",
        "type": "h1",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
